#lang racket

(provide taquin-make-state)
(provide taquin-adj-states)
(provide taquin-acc-state?)
;(provide taquin-heuristic)

(struct state vector)

; La fonction taquin-make-state prend en entrée une liste de N
; listes. La i-ème sous-liste représente la i-ème ligne du taquin, en
; commençant à compter depuis le haut. Les nombres sont numérotés à partir de 1
; et le trou est symbolisé par le symbole 'x.
; La fonction renvoie la représentation de l'état correspondant.
(define taquin-make-state
  (lambda (lls)
    'TODO))
    
; Si `state` est la représentation d'un état, (taquin-adj-states state)
; renvoie une liste de paire pointées, dont le car est le symbole menant
; à l'état représenté par le cdr.
(define taquin-adj-states
  (lambda (state)
    'TODO))

; (taquin-acc-state? state) renvoie vrai si et seulement si `state` est la
; représentation de l'état accepteur
(define taquin-acc-state?
  (lambda (state)
    'TODO))

; Si `state` est la représentation d'un état, (taquin-heuristic state)
; renvoie...
; (define taquin-heuristic
;   (lambda (state)
;     'TODO))

